package com.scrollList {	import com.MemoryTracker;	import com.greensock.*;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.text.*;			public class ScrollListItem extends MovieClip {				private var base:MovieClip;		public var tf:TextField;		private var _scrollList:ScrollList;		private var _defaultColour:int;		private var _highlightColour:int;						public function ScrollListItem(w:int, h:int, scrollList:ScrollList, defcol:int, hicol:int) {						base = new MovieClip();			MemoryTracker.track( base, "item base");//remove when done testing						_defaultColour = defcol;			_highlightColour = hicol;						_scrollList = scrollList;						//use to render background			base.graphics.clear();			base.graphics.lineStyle(2, 0xFFFFFF, 1);			base.graphics.beginFill(_defaultColour, 1);						//use for rounded corners			base.graphics.drawRoundRect(0, 0, w, h, 10);						//for standard rect			//base.graphics.drawRect(0, 0, w, h);						base.graphics.endFill();			addChild(base);									tf = new TextField();			tf.width = w-20;			tf.x = 10;			tf.y = 10;						tf.defaultTextFormat = new TextFormat("_sans", 12);			MemoryTracker.track( tf, "item tf");//remove when done testing						tf.multiline = tf.wordWrap = true;			tf.selectable = false;			tf.autoSize = TextFieldAutoSize.LEFT;			addChild(tf);						this.mouseChildren = false						addEventListener(Event.REMOVED_FROM_STAGE, destroy, false, 0, true);				addEventListener(MouseEvent.MOUSE_DOWN, itemPressed, false, 0, true);						}							protected function itemPressed(e:MouseEvent):void {			addEventListener(MouseEvent.MOUSE_UP, selectHandler, false, 0, true);			removeEventListener(MouseEvent.MOUSE_DOWN, itemPressed);			_scrollList.startTouchTimer(e);		}							public function selectItem():void {			addEventListener(MouseEvent.MOUSE_UP, selectHandler, false, 0, true);			TweenMax.to(base, .1, {colorTransform:{tint:_highlightColour, tintAmount:1}});//			MovieClip(root).txt.text = tf.text+" selected";//for testing		}				protected function selectHandler(e:MouseEvent):void {			removeEventListener(MouseEvent.MOUSE_UP, selectHandler);			_scrollList.stopTouchTimer();			addEventListener(MouseEvent.MOUSE_DOWN, itemPressed, false, 0, true);			TweenMax.to(base, .1, {colorTransform:{tint:_highlightColour, tintAmount:0}});							}										protected function destroy(e:Event):void {			trace("item destroyed");						removeEventListener(Event.REMOVED_FROM_STAGE, destroy);			removeEventListener(MouseEvent.MOUSE_DOWN, itemPressed);			removeChild(tf);			tf = null;			removeChild(base);			base = null;					}	}	}									